import questionary
from core.backend.objects.config import Config
import importlib
from core.backend.utils.debug import debug, info, warn, error, log_call


@log_call
def run_webserver_bootstrap():
    config = Config()
    webserver = config.get("core.webserver")

    available_webservers = {
        "nginx": {
            "label": "NGINX (OpenResty)",
            "module": "core.backend.bootstraps.nginx_bootstrap"
        },
        # "caddy": ...
    }

    # N·∫øu ch∆∞a c√≥ th√¨ h·ªèi ch·ªçn v√† l∆∞u l·∫°i
    if not webserver:
        label_to_key = {v["label"]: k for k, v in available_webservers.items()}
        webserver_label = questionary.select(
            "üñ•Ô∏è Ch·ªçn Webserver s·ª≠ d·ª•ng:",
            choices=list(label_to_key.keys())
        ).ask()
        webserver = label_to_key[webserver_label]
        config.set("core.webserver", webserver)
        config.save()
        print(f"‚úÖ ƒê√£ l∆∞u Webserver: {webserver}")

    # Lu√¥n kh·ªüi t·∫°o webserver n·∫øu ƒë√£ c√≥ t√™n
    if webserver in available_webservers:
        mod = importlib.import_module(
            available_webservers[webserver]["module"])
        mod.run_bootstrap()
    else:
        error(
            f"‚ùå Webserver `{webserver}` kh√¥ng n·∫±m trong danh s√°ch ƒë∆∞·ª£c h·ªó tr·ª£.")
