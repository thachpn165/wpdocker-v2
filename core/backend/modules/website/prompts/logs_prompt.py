from core.backend.modules.website.website_utils import select_website
from core.backend.utils.debug import log_call, info, warn, error, debug
from core.backend.modules.website.logs import watch_logs_website
from questionary import select

@log_call
def prompt_watch_logs():
    domain = select_website("Ch·ªçn website c·∫ßn xem log:")
    if not domain:
        info("ƒê√£ hu·ª∑ thao t√°c xem log.")
        return

    log_choices = {
        "üìù Log truy c·∫≠p (access.log)": "access",
        "‚ùå L·ªói NGINX (error.log)": "error",
        "üêå PHP ch·∫°y ch·∫≠m (php_slow.log)": "php_slow",
        "üêû L·ªói PHP (php_error.log)": "php_error"
    }

    label = select("Ch·ªçn lo·∫°i log c·∫ßn xem:", choices=list(log_choices.keys())).ask()
    if label is None:
        info("ƒê√£ hu·ª∑ thao t√°c xem log.")
        return  

    log_type = log_choices[label]
    watch_logs_website(domain, log_type)