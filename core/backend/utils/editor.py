import shutil
import questionary

# Danh s√°ch editor ph·ªï bi·∫øn ƒë·ªÉ ki·ªÉm tra tr√™n h·ªá th·ªëng
COMMON_EDITORS = [
    "nano", "vim", "nvim", "vi", "micro", "code", "subl", "gedit", "mate"
]

EDITOR_GUIDES = {
    "nano": {
        "Ch·ªânh s·ª≠a n·ªôi dung": "G√µ tr·ª±c ti·∫øp v√†o v√πng n·ªôi dung",
        "X√≥a n·ªôi dung": "D√πng ph√≠m Delete ho·∫∑c Backspace",
        "T√¨m ki·∫øm": "Ctrl + W",
        "L∆∞u v√† tho√°t": "Ctrl + O ‚Üí Enter, r·ªìi Ctrl + X",
        "Tho√°t kh√¥ng l∆∞u": "Ctrl + X, sau ƒë√≥ ch·ªçn N"
    },
    "vim": {
        "Ch·ªânh s·ª≠a n·ªôi dung": "Nh·∫•n i ƒë·ªÉ v√†o ch·∫ø ƒë·ªô INSERT",
        "X√≥a n·ªôi dung": "·ªû ch·∫ø ƒë·ªô INSERT d√πng Delete ho·∫∑c Backspace",
        "T√¨m ki·∫øm": "/ + t·ª´ kh√≥a, nh·∫•n Enter",
        "L∆∞u v√† tho√°t": ":wq + Enter",
        "Tho√°t kh√¥ng l∆∞u": ":q! + Enter"
    },
    "micro": {
        "Ch·ªânh s·ª≠a n·ªôi dung": "G√µ tr·ª±c ti·∫øp v√†o v√πng n·ªôi dung",
        "X√≥a n·ªôi dung": "D√πng ph√≠m Delete ho·∫∑c Backspace",
        "T√¨m ki·∫øm": "Ctrl + F",
        "L∆∞u v√† tho√°t": "Ctrl + S r·ªìi Ctrl + Q",
        "Tho√°t kh√¥ng l∆∞u": "Ctrl + Q r·ªìi ch·ªçn kh√¥ng l∆∞u"
    },
    "vi": {
        "Ch·ªânh s·ª≠a n·ªôi dung": "Nh·∫•n i ƒë·ªÉ v√†o ch·∫ø ƒë·ªô INSERT",
        "X√≥a n·ªôi dung": "·ªû ch·∫ø ƒë·ªô INSERT d√πng Delete ho·∫∑c Backspace",
        "T√¨m ki·∫øm": "/ + t·ª´ kh√≥a, nh·∫•n Enter",
        "L∆∞u v√† tho√°t": ":wq + Enter",
        "Tho√°t kh√¥ng l∆∞u": ":q! + Enter"
    }
    # C√°c editor GUI nh∆∞ code, subl, gedit kh√¥ng c·∫ßn h∆∞·ªõng d·∫´n CLI
}

def choose_editor(default: str = None) -> str:
    """
    Hi·ªÉn th·ªã danh s√°ch c√°c editor ƒëang c√≥ s·∫µn tr√™n h·ªá th·ªëng v√† cho ng∆∞·ªùi d√πng ch·ªçn.
    N·∫øu default ƒë∆∞·ª£c cung c·∫•p v√† c√≥ s·∫µn th√¨ s·∫Ω ch·ªçn s·∫µn.
    Sau khi ch·ªçn s·∫Ω hi·ªÉn th·ªã h∆∞·ªõng d·∫´n thao t√°c v√† h·ªèi x√°c nh·∫≠n ti·∫øp t·ª•c.
    """
    available_editors = [editor for editor in COMMON_EDITORS if shutil.which(editor)]

    if not available_editors:
        print("‚ùå Kh√¥ng t√¨m th·∫•y tr√¨nh so·∫°n th·∫£o n√†o c√≥ s·∫µn tr√™n h·ªá th·ªëng.")
        return None

    default_choice = default if default in available_editors else available_editors[0]

    selected = questionary.select(
        "Ch·ªçn tr√¨nh so·∫°n th·∫£o ƒë·ªÉ ch·ªânh s·ª≠a:",
        choices=available_editors,
        default=default_choice
    ).ask()

    if selected in EDITOR_GUIDES:
        guide = EDITOR_GUIDES[selected]
        print("\nüìò H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng tr√¨nh so·∫°n th·∫£o:")
        for key, val in guide.items():
            print(f"- {key}: {val}")

    confirm = questionary.confirm("B·∫°n c√≥ mu·ªën ti·∫øp t·ª•c m·ªü file v·ªõi tr√¨nh so·∫°n th·∫£o n√†y kh√¥ng?").ask()
    if not confirm:
        print("‚ùå ƒê√£ hu·ª∑ thao t√°c m·ªü tr√¨nh so·∫°n th·∫£o.")
        return None

    return selected
