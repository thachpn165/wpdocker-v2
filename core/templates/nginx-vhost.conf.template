server {
    listen 80;
    server_name ${DOMAIN};

    # üöÄ Redirect HTTP to HTTPS
    return 301 https://${DOMAIN}$request_uri;
}

server {
    listen 443 ssl;
    server_name ${DOMAIN};
    root /var/www/${DOMAIN};
    index index.php index.html index.htm;

    # üîê SSL Certificate
    ssl_certificate /var/www/${DOMAIN}/ssl/cert.crt;
    ssl_certificate_key /var/www/${DOMAIN}/priv.key;

    # üöÄ Include some optimized Nginx files
    include /usr/local/openresty/nginx/conf/globals/security.conf;
    include /usr/local/openresty/nginx/conf/globals/gzip.conf;
    include /usr/local/openresty/nginx/conf/globals/cache-control.conf;

    # Support CloudFlare
    include /usr/local/openresty/nginx/conf/globals/cloudflare.conf;

    # Integrate WAF, comment out the include below if not used
    include /usr/local/openresty/nginx/conf/waf/waf.conf;

    # üì• **Include cache configuration (default is no-cache)**
    include /usr/local/openresty/nginx/conf/cache/no-cache.conf;

    # üîß Configure `$php_upstream` variable for each website's dedicated PHP container
    # Resolver 127.0.0.11 is Docker's DNS resolver, helping reduce domain resolution time and resolve domains within Docker network
    # Do not remove to avoid "host not found in upstream" error when restarting Nginx
    resolver 127.0.0.11 valid=10s;
    set $php_upstream "${DOMAIN}-php:9000";

    # üìå Handle static files (images, JS, CSS, fonts, etc.)
    location ~* \.(ico|css|js|gif|jpg|jpeg|png|woff2?|ttf|eot|svg|mp4|webm|ogv|webp|pdf|zip|tar|gz|bz2|rar|7z|xml|rss|atom|txt|json|map)$ {
        expires max;
        access_log off;
    }

    # üõ†Ô∏è **Handle PHP with PHP-FPM**
    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass $php_upstream;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME /var/www/html$fastcgi_script_name;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_read_timeout 300;
        fastcgi_intercept_errors on;
    }

    error_log  /var/www/${DOMAIN}/logs/error.log;
    access_log /var/www/${DOMAIN}/logs/access.log;
}
