#!/bin/bash

set -e

# ƒê∆∞·ªùng d·∫´n c·ªë ƒë·ªãnh cho th∆∞ m·ª•c c√†i ƒë·∫∑t
FIXED_INSTALL_DIR="/opt/wp-docker"

# ƒê∆∞·ªùng d·∫´n th·ª±c t·∫ø ƒë·∫øn th∆∞ m·ª•c c√†i ƒë·∫∑t (s·∫Ω ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ t·∫°o symlink n·∫øu c·∫ßn)
ACTUAL_INSTALL_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/../.." && pwd)"

# Ki·ªÉm tra v√† t·∫°o symlink n·∫øu c·∫ßn
if [ ! -e "$FIXED_INSTALL_DIR" ]; then
    echo "üîó T·∫°o symlink $FIXED_INSTALL_DIR -> $ACTUAL_INSTALL_DIR"
    # Ki·ªÉm tra th∆∞ m·ª•c cha c√≥ t·ªìn t·∫°i kh√¥ng
    if [ ! -d "$(dirname "$FIXED_INSTALL_DIR")" ]; then
        echo "üìÅ T·∫°o th∆∞ m·ª•c $(dirname "$FIXED_INSTALL_DIR")"
        mkdir -p "$(dirname "$FIXED_INSTALL_DIR")"
    fi
    ln -sf "$ACTUAL_INSTALL_DIR" "$FIXED_INSTALL_DIR"
    echo "‚úÖ ƒê√£ t·∫°o symlink th√†nh c√¥ng"
elif [ -L "$FIXED_INSTALL_DIR" ]; then
    # ƒê√£ l√† symlink, ki·ªÉm tra ƒë√≠ch
    LINK_TARGET=$(readlink "$FIXED_INSTALL_DIR")
    if [ "$LINK_TARGET" != "$ACTUAL_INSTALL_DIR" ]; then
        echo "‚ö†Ô∏è Symlink $FIXED_INSTALL_DIR ƒëang tr·ªè ƒë·∫øn $LINK_TARGET"
        echo "üîÑ C·∫≠p nh·∫≠t symlink ƒë·ªÉ tr·ªè ƒë·∫øn $ACTUAL_INSTALL_DIR"
        ln -sf "$ACTUAL_INSTALL_DIR" "$FIXED_INSTALL_DIR"
        echo "‚úÖ ƒê√£ c·∫≠p nh·∫≠t symlink th√†nh c√¥ng"
    else
        echo "‚úÖ Symlink $FIXED_INSTALL_DIR ƒë√£ tr·ªè ƒë√∫ng ƒë·∫øn $ACTUAL_INSTALL_DIR"
    fi
elif [ -d "$FIXED_INSTALL_DIR" ]; then
    # L√† th∆∞ m·ª•c b√¨nh th∆∞·ªùng, kh√¥ng ph·∫£i symlink
    echo "‚ö†Ô∏è $FIXED_INSTALL_DIR ƒë√£ t·ªìn t·∫°i v√† kh√¥ng ph·∫£i l√† symlink"
    echo "üîç Ki·ªÉm tra xem c√≥ ph·∫£i th∆∞ m·ª•c c√†i ƒë·∫∑t hi·ªán t·∫°i kh√¥ng..."
    
    # N·∫øu l√† c√πng ƒë∆∞·ªùng d·∫´n th·∫≠t s·ª±, m·ªçi th·ª© OK
    if [ "$(cd "$FIXED_INSTALL_DIR" && pwd)" = "$(cd "$ACTUAL_INSTALL_DIR" && pwd)" ]; then
        echo "‚úÖ $FIXED_INSTALL_DIR l√† th∆∞ m·ª•c c√†i ƒë·∫∑t hi·ªán t·∫°i, ti·∫øp t·ª•c"
    else
        echo "‚ùå $FIXED_INSTALL_DIR kh√¥ng ph·∫£i l√† th∆∞ m·ª•c c√†i ƒë·∫∑t hi·ªán t·∫°i"
        echo "‚ö†Ô∏è Vui l√≤ng x√≥a ho·∫∑c di chuy·ªÉn th∆∞ m·ª•c $FIXED_INSTALL_DIR v√† ch·∫°y l·∫°i script"
        exit 1
    fi
fi

# S·ª≠ d·ª•ng ƒë∆∞·ªùng d·∫´n c·ªë ƒë·ªãnh
INSTALL_DIR="$FIXED_INSTALL_DIR"
VENV_DIR="$INSTALL_DIR/.venv"
PYTHON_EXEC="$VENV_DIR/bin/python"
MAIN_FILE="$INSTALL_DIR/src/main.py"

# Ki·ªÉm tra v√† t·∫°o file core.env t·ª´ core.env.sample n·∫øu c·∫ßn
CORE_ENV="$INSTALL_DIR/core.env"
CORE_ENV_SAMPLE="$INSTALL_DIR/core.env.sample"

if [ ! -f "$CORE_ENV" ] && [ -f "$CORE_ENV_SAMPLE" ]; then
    echo "üìÑ Creating core.env from sample..."
    cp "$CORE_ENV_SAMPLE" "$CORE_ENV"
    echo "‚úÖ Created core.env from sample template"
fi

# Ki·ªÉm tra python3
source "$(dirname "${BASH_SOURCE[0]}")/install_python.sh"
install_python

# Kh·ªüi t·∫°o venv cho Python (t·∫°i th∆∞ m·ª•c .venv)
source "$(dirname "${BASH_SOURCE[0]}")/init_python.sh"
init_python_env

# Ch·∫°y backend
echo "üöÄ Launching WP Docker..."

# K√≠ch ho·∫°t virtualenv trong shell hi·ªán t·∫°i
if [ -f "$VENV_DIR/bin/activate" ]; then
    echo "üêç K√≠ch ho·∫°t m√¥i tr∆∞·ªùng ·∫£o Python trong shell ch√≠nh..."
    source "$VENV_DIR/bin/activate"
else
    echo "‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y t·ªáp activate. C·ªë g·∫Øng ti·∫øp t·ª•c m√† kh√¥ng k√≠ch ho·∫°t virtualenv..."
fi

# ƒê·∫£m b·∫£o PYTHONPATH ƒë∆∞·ª£c thi·∫øt l·∫≠p ƒë√∫ng tr∆∞·ªõc khi ch·∫°y
export PYTHONPATH="$INSTALL_DIR:$ACTUAL_INSTALL_DIR"
echo "üìä Using PYTHONPATH: $PYTHONPATH"

# T·∫°o file init.py n·∫øu c·∫ßn thi·∫øt (ƒë·∫£m b·∫£o c√°c th∆∞ m·ª•c ƒë∆∞·ª£c nh·∫≠n di·ªán l√† package Python)
# ƒê·∫∑c bi·ªát quan tr·ªçng cho symlink tr√™n Linux
check_init_file() {
    local dir="$1"
    if [ -d "$dir" ] && [ ! -f "$dir/__init__.py" ]; then
        echo "üì¶ T·∫°o file __init__.py trong $dir"
        touch "$dir/__init__.py"
    fi
}

echo "üîç Ki·ªÉm tra v√† ƒë·∫£m b·∫£o c√°c module Python ho·∫°t ƒë·ªông ƒë√∫ng..."

# Ch·ªâ ki·ªÉm tra c√°c th∆∞ m·ª•c con c·ªßa common n·∫øu kh√¥ng t√¨m th·∫•y common.config
if ! python3 -c "import src.common.config" 2>/dev/null; then
    echo "‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y module src.common.config, ki·ªÉm tra c·∫•u tr√∫c package..."
    COMMON_CONFIG_DIR="$INSTALL_DIR/src/common/config"
    mkdir -p "$COMMON_CONFIG_DIR"
    check_init_file "$INSTALL_DIR/src"
    check_init_file "$INSTALL_DIR/src/common"
    check_init_file "$COMMON_CONFIG_DIR"
    
    # Ki·ªÉm tra c√≥ file qu·∫£n l√Ω c·∫•u h√¨nh kh√¥ng
    if [ ! -f "$COMMON_CONFIG_DIR/manager.py" ]; then
        echo "üîÑ Sao ch√©p file manager.py t·ª´ th∆∞ m·ª•c g·ªëc..."
        if [ -f "$ACTUAL_INSTALL_DIR/src/common/config/manager.py" ]; then
            cp "$ACTUAL_INSTALL_DIR/src/common/config/manager.py" "$COMMON_CONFIG_DIR/"
        fi
    fi
fi

# Th·ª≠ m·ªôt c√°ch kh√°c: s·ª≠ d·ª•ng PYTHONPATH t∆∞∆°ng ƒë·ªëi
# Th√™m th∆∞ m·ª•c src v√†o PYTHONPATH
export PYTHONPATH="$PYTHONPATH:$INSTALL_DIR/src"
echo "üìä Updated PYTHONPATH: $PYTHONPATH"

# Hi·ªÉn th·ªã th√¥ng tin m√¥i tr∆∞·ªùng ƒë·ªÉ debug
echo "üîç Th√¥ng tin m√¥i tr∆∞·ªùng Python:"
echo "Python path: $(which python3)"
echo "Virtual env Python: $PYTHON_EXEC"
echo "Virtualenv active: $VIRTUAL_ENV"

# Ch·∫°y ch∆∞∆°ng tr√¨nh ch√≠nh v·ªõi t√πy ch·ªçn ƒë·∫∑c bi·ªát - ƒëi·ªÅu ch·ªânh sys.path
"$PYTHON_EXEC" -c "
import sys, os
sys.path.insert(0, '$INSTALL_DIR')
sys.path.insert(0, '$ACTUAL_INSTALL_DIR')

# Ki·ªÉm tra sys.path
print('Python sys.path:')
for p in sys.path[:5]:
    print(f'  - {p}')

# Ki·ªÉm tra module
try:
    import src
    print('‚úÖ Module src loaded successfully')
except ImportError as e:
    print(f'‚ùå Failed to load src: {e}')

# Ch·∫°y ch∆∞∆°ng tr√¨nh ch√≠nh
try:
    sys.argv[0] = '$MAIN_FILE'
    exec(open('$MAIN_FILE').read())
except Exception as e:
    print(f'‚ùå Error running main program: {e}')
"