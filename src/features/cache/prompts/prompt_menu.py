"""
WP Cache setup menu prompt module.

This module provides the user interface for WordPress cache setup functions
like installing and configuring different caching plugins and systems.
"""

import questionary
from questionary import Style
from typing import Optional
from src.features.cache.core.setup import setup_fastcgi_cache
from src.common.logging import info, error, debug, success
from src.features.website.utils import select_website

def not_implemented() -> None:
    """Handle not implemented features."""
    error("üöß Feature not implemented yet")
    input("Press Enter to continue...")

# Custom style for the menu
custom_style = Style([
    ('qmark', 'fg:cyan bold'),
    ('question', 'fg:cyan bold'),
    ('answer', 'fg:green bold'),
    ('pointer', 'fg:cyan bold'),
    ('highlighted', 'fg:green bold'),
    ('selected', 'fg:green bold'),
    ('separator', 'fg:cyan'),
    ('instruction', 'fg:gray'),
    ('text', ''),
    ('disabled', 'fg:gray italic'),
])

def prompt_cache_menu() -> None:
    """Hi·ªÉn th·ªã menu qu·∫£n l√Ω cache cho website WordPress."""
    while True:
        answer = questionary.select(
            "\nüóÑÔ∏è Cache Management Menu:",
            choices=[
                {"name": "1. C√†i ƒë·∫∑t FastCGI Cache cho WordPress", "value": "fastcgi"},
                {"name": "0. Quay l·∫°i menu ch√≠nh", "value": "exit"},
            ]
        ).ask()
        if answer == "fastcgi":
            domain = select_website("Ch·ªçn website c·∫ßn c√†i cache:")
            if not domain:
                info("Kh√¥ng c√≥ website n√†o ho·∫∑c thao t√°c b·ªã h·ªßy. Quay l·∫°i menu.")
                continue
            if setup_fastcgi_cache(domain):
                info(f"ƒê√£ c√†i ƒë·∫∑t FastCGI cache th√†nh c√¥ng cho {domain}")
            else:
                error(f"C√†i ƒë·∫∑t FastCGI cache th·∫•t b·∫°i cho {domain}")
        elif answer == "exit":
            break